// Завдання: Шифрування та розшифровка з використанням двох зсувів

// Реалізуйте функції для шифрування та розшифровки тексту за допомогою подвійного зсуву.
// Шифрування: Для кожної літери тексту спочатку виконується зсув за її позицією в алфавіті.
//  Потім застосовується зсув по ключу. Алфавіт використовується латинський (A-Z), без урахування регістру.
// •	Для кожної літери, спочатку обчислюємо її позицію в алфавіті. Позиція літери — це її порядковий номер в алфавіті
//  (наприклад, для 'A' — 1, для 'B' — 2 і так далі).
// •	Зсув по алфавіту для кожної літери обчислюється як (позиція літери в алфавіті - позиція літери в алфавіті / 2) (округлюється вниз).
// •	Після цього до кожної літери застосовуємо зсув по ключу (ціле число), який задається користувачем.
//  Ключ визначає на скільки позицій зсувається літера по алфавіту.
// Розшифровка: Для розшифровки застосовуємо зворотний процес: спочатку скасовуємо зсув по ключу, 
// а потім відновлюємо початкову позицію літери за допомогою зсуву по алфавіту.
// Приклад:
// •	Вхід:
// o	encode("HELLO", 3)
// •	Вихід:
// o	"OKUUZ"
// •	Вхід:
// o	decode("OKUUZ", 3)
// •	Вихід:
// o	"HELLO"
// Примітки:
// •	Алфавіт: A-Z (включаючи тільки латинські літери, без урахування регістру).
// ABCDEFGHIJKLMNOPQRSTUVWXYZ
// •	Пробіли та інші знаки пунктуації не змінюються.
// •	Якщо після зсуву літера виходить за межі 'Z', вона повертається на початок алфавіту.
// •	Задача вимагає правильного оброблення циклічності алфавіту.

#include "exercise5_hard.h"
#include <string>



std::string encode(const std::string& text, int key) {
    
}


std::string decode(const std::string& text, int key) {

}



/*
ДЛЯ ПЕРЕВІРКИ: 
g++ -Wall -O2 -std=c++11 -I./exercises -I./tests ./tests/test_exercise5_hard.cpp ./exercises/exercise5_hard.cpp -o test_exercise5_hard && ./test_exercise5_hard
*/